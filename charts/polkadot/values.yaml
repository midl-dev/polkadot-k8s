# Images not part of the tezos-k8s repo go here
images:
  polkadot_node: "paritytech/polkadot:latest"
# Images that are part of the polkadot-k8s repo go here with 'latest' tag
polkadot_k8s_images:
  polkadot_archive_downloader: ghcr.io/midl-dev/polkadot-archive-downloader:master
  polkadot_node_key_configurator: ghcr.io/midl-dev/polkadot-node-key-configurator:master
  polkadot_sidecar: ghcr.io/midl-dev/polkadot-sidecar:master
  polkadot_session_key_check: ghcr.io/midl-dev/polkadot-session-key-check:master

#polkadot_archive_url:

polkadot_telemetry_url: null

polkadot_validator_name: polkadot_k8s_pulumi

number_of_out_peers: 10

number_of_in_peers: 10

# if enabled, will launch a cronjob that alerts you
# when the session key for the validator is not present
# in the local node.
session_key_check:
  enabled: false
  stash_account_address: "stash account address to verify"
  stash_account_alias: "alias for the stash account"
  slack_alert_token: "token to send session key mismatch alerts on slack"
  slack_alert_channel: "the slack channel where you want to receive the alert"
  cron_schedule: "0 */6 * * *"

chain: kusama

# list of peers to always connect to. could be polkadot nodes in different namespaces
# should be a list of key-value pairs with the key as namespace name and the value as private network key
local_nodes: {}

# if provided, this will be passed as the public ip/port combination of the node
# If you have an ingress network load balancer ip sending p2p traffic to the node, set this to its address/port
p2p_ip: null 
p2p_port: 30333

# to deploy in a specific node pool, put label here
node_selector: {}

# vol size (in Gi)
# Applies to the statefulset's PVC template.
# consequently this value only applies for creation.
# It is not possible to resize the volume by editing this value.
# Instead, you must resize the pvc directly.
vol_size: 50

# storage class name
# to specify the storage class for polkadot storage backend volume
# storage_class: my-storage-class

# deploy service monitor?
# only set to true if you have the prometheus operator installed.
# Otherwise, helm installation will fail
deploy_service_monitor: false

resources:
  limits:
    cpu: 0
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

# liveness probe settings - the polkadot node restarts when not responsive
livenessProbe:
  periodSeconds: 30
  failureThreshold: 40

#disable hardware benchmarks
no_hardware_benchmarks: "true"
